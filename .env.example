# Port used by the server
PORT=4000 # optional

# Log level, set to "trace" for detailed logs
LOG_LEVEL=info # optional

# Secret used by the server to encrypt/decrypt values
# You can use `$ openssl rand -base64 32` to generate new one
CRYPTO_CIPHER_KEY=

# MongoDB database, must be a replica set, see https://www.mongodb.com/docs/manual/tutorial/deploy-replica-set/
MONGODB_URL=mongodb://localhost:27017?directConnection=true
MONGODB_DATABASE_NAME=bee-api
MONGODB_CA_CERT= # optional

# Redis database, used by distributed queue and as pub/sub broker
REDIS_URL=redis://127.0.0.1:6379/0
REDIS_CA_CERT= # optional

# Redis database for data caching
# In production, make sure you set up eviction policy to `volatile-lru`
# https://redis.io/docs/latest/develop/reference/eviction/#eviction-policies
REDIS_CACHE_URL=redis://127.0.0.1:6379/1
REDIS_CACHE_CA_CERT= # optional

# Object Storage used for files and their text extractions 
S3_ENDPOINT=
S3_ACCESS_KEY_ID=
S3_SECRET_ACCESS_KEY=
S3_BUCKET_FILE_STORAGE=

# OAuth2 client credentials for access token validation, acting as the resource server
AUTH_WELL_KNOWN=
AUTH_CLIENT_ID=
AUTH_CLIENT_SECRET=
AUTH_AUDIENCE=

# Queue workers
RUN_BULLMQ_WORKERS=runs,runs:cleanup,vectorStores:cleanup,vectorStores:fileProcessor,files:extraction,threads:cleanup,files:cleanup


# --- BACKEND SECTION ---

# LLM backend, possible values are: ollama, openai, watsonx, bam, ibm-vllm
LLM_BACKEND=watsonx

# Embedding backend, possible values are: ollama, openai, watsonx, bam, caikit
EMBEDDING_BACKEND=watsonx

# --- Backend details (only applicable to backend(s) selected above) ---

# https://ollama.com/
OLLAMA_URL=

# https://openai.com/
OPENAI_API_KEY=

# https://www.ibm.com/products/watsonx-ai
WATSONX_API_KEY=
WATSONX_PROJECT_ID=
WATSONX_REGION= # optional

BAM_API_KEY=

# Must contain port, can contain {model_id} placeholder, e.g. "{model_id}.inference.example.com:443"
IBM_VLLM_URL=
IBM_VLLM_ROOT_CERT=
IBM_VLLM_CERT_CHAIN=
IBM_VLLM_PRIVATE_KEY=

CAIKIT_URL=
CAIKIT_CA_CERT=
CAIKIT_CERT=
CAIKIT_KEY=

# --- BACKEND SECTION ---

# --- TOOLS SECTION ---

# Code Interpreter, see https://github.com/i-am-bee/bee-code-interpreter
BEE_CODE_INTERPRETER_URL=http://localhost:50051
BEE_CODE_INTERPRETER_CA_CERT= # optional
BEE_CODE_INTERPRETER_CERT= # optional
BEE_CODE_INTERPRETER_KEY= # optional
# Storage for code interpreter, possible values are: s3, filesystem
BEE_CODE_INTERPRETER_STORAGE_BACKEND=s3
# applicable for s3 storage, uses S3 credential above
BEE_CODE_INTERPRETER_BUCKET_FILE_STORAGE=
# applicable for filesystem storage
BEE_CODE_INTERPRETER_FILE_STORAGE_PATH=

# Milvus is used as a vector store for file search tool
MILVUS_HOST=127.0.0.1
MILVUS_PORT=19530
MILVUS_USE_TLS=false
MILVUS_USERNAME=
MILVUS_PASSWORD=
MILVUS_DATABASE_NAME=

# Search tool backend, possible values are: google, duck-duck-go
SEARCH_TOOL_BACKEND=duck-duck-go
# applicable for google search tool
BEE_GOOGLE_SEARCH_API_KEY=
BEE_GOOGLE_SEARCH_CSE_ID=

# Forward proxy for api calling tool
HTTP_PROXY_URL= # optional

# --- TOOLS SECTION ---

# Observer server, see https://github.com/i-am-bee/bee-observe
BEE_OBSERVE_API_URL= # optional
BEE_OBSERVE_API_AUTH_KEY= # optional

# Text extraction service
WDU_URL= # optional

# Identifiers to be used for seeder and to allocate new users into default org/project
ORGANIZATION_OWNER_ID_DEFAULT=org_user_670cc04869ddffe24f4fd70e
PROJECT_ADMIN_ID_DEFAULT=proj_principal_670cc04869ddffe24f4fd710
